# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/using-atom-basic-customization#customizing-key-bindings
# * https://atom.io/docs/latest/behind-atom-keymaps-in-depth
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it here:
# https://github.com/bevry/cson#what-is-cson

'.platform-darwin':
    'shift-cmd-n': 'fuzzy-finder:toggle-file-finder'
    'cmd-1': 'tree-view:toggle'

'.platform-darwin .tree-view':
    'cmd-1': 'tree-view:toggle'

'.editor':
    'cmd-y': 'editor:delete-line'
    'cmd-alt-l': 'atom-beautify:beautify-editor'

'.workspace .editor':
    'cmd-shift-down': 'editor:move-line-down'
    'cmd-shift-up': 'editor:move-line-up'

'.platform-darwin atom-workspace':
  'alt-f12': 'terminal-plus:toggle'

'body':
    'cmd-f4': 'core:close'

'.platform-darwin .editor':
    'cmd-g': 'go-to-line:toggle'
    'cmd-d': 'editor:duplicate-lines'

'.platform-darwin atom-text-editor':
    'alt-enter': 'spell-check:correct-misspelling'
    'f3': 'find-and-replace:find-next'
    'shift-f3': 'find-and-replace:find-previous'

'atom-workspace atom-text-editor:not([mini])':
    'alt-enter': 'spell-check:correct-misspelling'

'.platform-darwin .find-and-replace':
    'alt-enter': 'spell-check:correct-misspelling'

'atom-text-editor':
    'cmd-w': 'expand-region:expand'
    'shift-cmd-w': 'expand-region:shrink'

'atom-text-editor:not(.mini)':
    'shift-f6': 'refactor:rename'
